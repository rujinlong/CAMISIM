executor {
    name = 'slurm'
    queueSize = 95
    submitRateLimit = '30 / 1min'
}

profiles {
    // The following settings are used by the denglab cluster. Please change them to fit your cluster.
    // ex. binding path for singularity and charliecloud, queue name, clusterOptions, time limit, etc.
    singularity_hmgu {
        singularity.runOptions = "--writable-tmpfs -B /ictstr01/project/genomics -B /ictstr01/home/viro/jinlong.ru"
        queueSize=50
    }

    denglab_hmgu {
        process.executor       = 'slurm'
        process.cpus           = 1
        process.memory         = 7.GB
        process.queue          = 'cpu_p'
        process.clusterOptions = '-q cpu_normal'
        process.time           = 71.h
    }

    debug { process.beforeScript = 'echo $HOSTNAME' }
    standard {
        process.executor       = 'local'
        process.cpus           = 1
        process.memory         = 1.GB
    }
    conda {
        params.enable_conda    = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
}


process {
    errorStrategy = 'ignore'
    maxRetries    = 1
}

params {
    simulate_fastq_directly = true
    pipeline = "metagenomic"

    // ================================================================================
    // Modified based on `metagenomic.config`
    // ================================================================================
    // If the directory does not exist, it will be created.
    outdir = "output"

    // Size of a single sample in Gigabasepairs (Gbp).
    // The actual size, including mapping files, might be larger.
    size = 0.05

    // Type of the used read simulator.
    // Choose from "art"/"nanosim3"/"wgsim".
    type="art"

    // The number of samples to simualate reads for.
    number_of_samples=3

    // This parameter specifies whether to do the gold standard assembly per sample.
    gsa = true

    // The samples to do the gold standard assembly for ("[0,1]").
    // If the list is empty ("[]") the pooled gsa will be skipped.
    // If the parameter is set to true, all samples will be considered.
    pooled_gsa = true

    // This parameter specifies whether the reads should be anonymized.
    anonymization = true

    // An optional seed to get consistent results.
    // If None is used, a random seed is chosen.
    seed = 632741178

    // If a biom profile is given, the metagenome simulation will be exectuted from profile (biom_profile="${projectDir}/defaults/mini.biom").
    biom_profile=""

    // A tab-sperated file holding a genome Id and the path to reference fasta file of the genome.
    // Use either an absolute path to reference fasta file or a relative one.
    // Note, that if a relative path is used, CAMISIM will expect the reference fasta file(s) to be in the project directory.
    genome_locations_file = "${launchDir}/input/genome_locations.tsv"

    // Taxonomy dump from the NCBI (ncbi_taxdump_file = "${projectDir}/tools/ncbi-taxonomy_20170222.tar.gz").
    // If no Taxonomy dump is set, CAMISIM will download a new one.
    ncbi_taxdump_file = "${launchDir}/input/ncbi-taxonomy.tar.gz"

    // Path to the input metadata tsv file.
    // The file has to be in the format: genome_ID`\t`OTU`\t`NCBI_ID`\t`novelty_category.
    metadata_file = "${launchDir}/input/meta_data.tsv"

    // Maximum number of strains drawn from genomes belonging to a single OTU
    // OTU is taken from the metadata file
    // If the simulation is executed from profile (see parameter biom_profile): max strains need to be greater or equal to 2
    max_strains_per_otu=1


    // ================================================================================
    // Modified based on `art.config`
    // ================================================================================
    profile_read_length=150
    fragment_size_mean = 270
    fragment_size_sd = 27
    base_profile_name="${projectDir}/tools/art_illumina-2.3.6/profiles/ART_MBARC-26_HiSeq_R"


    // ================================================================================
    // Modified based on `profile.config`
    // ================================================================================
    // File pointing to reference genomes of the format: NCBI id\tScientific name\tNCBI ftp address of full genome.
    reference_genomes="${launchDir}/input/assembly_summary_complete_genomes.txt"

    // Use sampling without replacing, so genomes are used for exactly one OTU only (decreases accuracy)
    no_replace = true

    // If no genomes are found for certain OTUs, fill up with previously unused genomes
    fill_up = false

    // File containing additional reference genomes, mapped to OTUs from the input profile
    // is optional
    additional_references=""


    // ================================================================================
    // Modified based on `distribution.config`
    // ================================================================================
    // the paths to the distribution files to use for the read simulation
    // use wildcard or a list of paths to the distribution files ([path1, path2])
    // if this parameter is empty, CAMISIM will calculate new distributions (community design)
    distribution_files="${launchDir}/input/distribution_*.txt"

    // In case a community design is performed (see parameter distribution_files), it is possible to stop the pipeline after the community design.
    // Is this parameter set to true, the simulation will stop after the community design and output the distribution files. The user can inspect and modify those and input them again.
    // Is this parameter set to false, the pipeline will execute all steps.
    just_community_design = false

    // mode for changing the abundances in different samples
    // has to be one of replicates/timeseries_lognormal/timeseries_normal/differential
    mode="differential"

    // Mean of the used log-normal distribution
    // 1 is an empirically good mean
    log_mu = 1

    // standard deviation of the used log-normal distribution
    // 2 is an empirically good sd
    log_sigma = 2

    // mean of the used normal distribution
    gauss_mu = 1

    // standard deviation of the used normal distribution
    gauss_sigma = 1

    // Show the used distribution of genomes before simulating.
    verbose = "False"

    // Total number of simulated genomes
    // Difference between genomes_total and genomes_real are simulated by sgEvolver
    // Needs to be bigger or equal to genomes_real. If it is equal to genomes_total there will be no strain simulation.
    genomes_total=2

    // Number of genomes used from the input genomes
    genomes_real=2

    // Optional file used by the sgEvolver, mapping togene annotations of the input genomes
    id_to_gff_file=""

    // Path to a template.tree for the sgEvolver from the mauve suite
    // Example tree is shipped along the sgEvolver itself within CAMISIM
    strain_simulation_template="${projectDir}/scripts/sgEvolver/simulation_dir"


    // ================================================================================
    // Modified based on `conda.config`
    // ================================================================================
    conda.enabled = true
    conda.useMamba = true
    conda.cacheDir="${HOME}/miniconda3/envs/camisim_envs"
}
